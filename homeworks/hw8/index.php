<?php
// 1. Написать аналог «Проводника» в Windows для директорий на сервере при помощи итераторов.

function findDir($dir)
{
    foreach (new DirectoryIterator($dir) as $file) {
        if ($file->isDot()) {
            continue;
        }

        echo $file->getPath() . '\\' . $file->getFileName() . PHP_EOL;

        if ($file->isDir()) {
            findDir($file->getPath() . '\\' . $file->getFileName());
        }
    }
}

findDir("..");

/*
2. Определить сложность следующих алгоритмов:
        - поиск элемента массива с известным индексом,
        - дублирование массива через foreach,
        - рекурсивная функция нахождения факториала числа. ###
*/

    // Поиск элемента массива с известным индексом. Сложность алгоритма O(N)

$array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
echo "результат поиска элемента с известным индексом " . $array[2] . PHP_EOL;

// Дублирование массива через foreach. Сложность данного алгоритма O(N) т.к. алгоритм перебирает все элементы 1 раз

$newArray = [];

foreach ($array as $value) {
    array_push($newArray, $value);
}

echo "Дублирование массива: " . PHP_EOL;
print_r($newArray) . PHP_EOL;

//рекурсивная функция нахождения факториала числа.Сложность данного алгоритма - O(N)

function findFactorial($n)
{
    if ($n <= 0) {
        return 1;
    }
    return $n * findFactorial($n - 1);
}

echo "Результат рекурсивной функции " . findFactorial(4) . PHP_EOL;


//3. Определить сложность следующих алгоритмов. Сколько произойдет итераций?


// 1) сложность алгоритма O(N^2). количество итераций - 700

//$n = 100;
//$array[] = [];
//
//for ($i = 0; $i < $n; $i++) {
//    for ($j = 1; $j < $n; $j *= 2) {
//        $array[$i][$j] = true;
//    }
//}

// 2) сложность данного цикла можно оценить, как O(N^2). В данном цикле 2504 итерации

//$n = 100;
//$array[] = [];
//
//for ($i = 0; $i < $n; $i += 2) { // 100/2 = 50, здесь получится 50 итераций
//    for ($j = $i; $j < $n; $j++) {
//        // 100 - $j Например, 100 - 2 = 98  или 100 - 70 = 30 таким образом получаем количество записанных значений
//        // в массив. Всего в данном цикле 2454 итерации
//        $array[$i][$j] = true;
//    }
//}


